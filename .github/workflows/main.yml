name: Continuous Delivery

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install Docker
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      # Install Minikube
      - name: Install Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube

      # Start Minikube cluster
      - name: Start Minikube
        run: |
          minikube start

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push Docker image
      - name: Push Docker image
        run: |
          docker pull preethikha9/flask-stock-app:latest || true
          docker build -t preethikha9/flask-stock-app:latest .
          docker push preethikha9/flask-stock-app:latest

      # Install kubectl
      - name: Install kubectl
        run: |
          sudo apt-get update && sudo apt-get install -y apt-transport-https gnupg2
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubectl

      # Configure kubectl
      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          mkdir -p ~/.kube
          mv kubeconfig ~/.kube/config

      # Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          echo '
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: flask-stock-app
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: flask-stock-app
            template:
              metadata:
                labels:
                  app: flask-stock-app
              spec:
                containers:
                - name: flask-stock-app
                  image: preethikha9/flask-stock-app:latest
                  ports:
                  - containerPort: 5000
          ' > deployment.yaml
          kubectl apply -f deployment.yaml --validate=false
